// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanetShoes.Infrastructure.Context;

#nullable disable

namespace PlanetShoes.Migrations
{
    [DbContext(typeof(PlanetShoesDbContext))]
    [Migration("20250110161434_AddTipoEstruturaToEstrutura")]
    partial class AddTipoEstruturaToEstrutura
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.Estrutura", b =>
                {
                    b.Property<string>("IdEstrutura")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSubEstrutura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEstrutura")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("IdEstrutura");

                    b.ToTable("Estruturas");

                    b.HasDiscriminator<string>("TipoEstrutura").HasValue("Estrutura");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.MateriaPrima", b =>
                {
                    b.Property<string>("IdMateriaPrima")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Classe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImgMateriaPrima")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnidadeMedida")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdMateriaPrima");

                    b.ToTable("MateriasPrimas");

                    b.HasData(
                        new
                        {
                            IdMateriaPrima = "MateriaPrima1",
                            Classe = "Natural",
                            Codigo = 0,
                            Descricao = "Couro de alta qualidade",
                            Nome = "Couro Bovino",
                            UnidadeMedida = 2,
                            Valor = 100.00m
                        },
                        new
                        {
                            IdMateriaPrima = "MateriaPrima2",
                            Classe = "Sintético",
                            Codigo = 0,
                            Descricao = "Borracha para solados",
                            Nome = "Borracha Sintética",
                            UnidadeMedida = 5,
                            Valor = 50.00m
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.Peca", b =>
                {
                    b.Property<string>("IdPeca")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Agrupamento")
                        .HasColumnType("int");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<float>("Consumo")
                        .HasColumnType("real");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("IdEstrutura")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdMateriaPrima")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImgPeca")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MateriaPrimaIdMateriaPrima")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tamanho")
                        .HasColumnType("int");

                    b.HasKey("IdPeca");

                    b.HasIndex("IdEstrutura");

                    b.HasIndex("MateriaPrimaIdMateriaPrima");

                    b.ToTable("Pecas");

                    b.HasDiscriminator().HasValue("Peca");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            IdPeca = "PecaGenerica1",
                            Agrupamento = 0,
                            Codigo = 301,
                            Consumo = 1f,
                            Descricao = "Peça genérica 1",
                            IdEstrutura = "Estrutura9",
                            IdMateriaPrima = "MateriaPrima1",
                            ImgPeca = new byte[0],
                            Nome = "Peça Genérica 1",
                            Tamanho = 40
                        },
                        new
                        {
                            IdPeca = "PecaGenerica2",
                            Agrupamento = 1,
                            Codigo = 302,
                            Consumo = 1.5f,
                            Descricao = "Peça genérica 2",
                            IdEstrutura = "Estrutura10",
                            IdMateriaPrima = "MateriaPrima2",
                            ImgPeca = new byte[0],
                            Nome = "Peça Genérica 2",
                            Tamanho = 42
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.Usuario", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UserId = "9d340277-2ced-4037-84f4-c6fc2cba5579",
                            DisplayName = "Inacio Felipe Couto Ferreira",
                            Email = "inacio.felipe@planetshoes.com",
                            Password = "inacio",
                            Username = "Inacio"
                        },
                        new
                        {
                            UserId = "f9921ce6-ff36-4757-b3be-a7c7e53c45a2",
                            DisplayName = "Luciano Antônio Ferreira",
                            Email = "luciano.ferreira@planetshoes.com",
                            Password = "luciano",
                            Username = "Luciano"
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaAcabado", b =>
                {
                    b.HasBaseType("PlanetShoes.Infrastructure.Data.Estrutura");

                    b.Property<float>("Consumo")
                        .HasColumnType("real");

                    b.Property<string>("EstruturaIdEstrutura")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("ImgAcabado")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasIndex("EstruturaIdEstrutura");

                    b.HasDiscriminator().HasValue("Acabado");

                    b.HasData(
                        new
                        {
                            IdEstrutura = "Estrutura1",
                            IdSubEstrutura = "SubEstrutura1",
                            Consumo = 10.5f,
                            ImgAcabado = new byte[0]
                        },
                        new
                        {
                            IdEstrutura = "Estrutura2",
                            IdSubEstrutura = "SubEstrutura2",
                            Consumo = 15f,
                            ImgAcabado = new byte[0]
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaAviamento", b =>
                {
                    b.HasBaseType("PlanetShoes.Infrastructure.Data.Estrutura");

                    b.Property<float>("Consumo")
                        .HasColumnType("real");

                    b.Property<string>("EstruturaIdEstrutura")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("ImgAcabado")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasIndex("EstruturaIdEstrutura");

                    b.ToTable("Estruturas", t =>
                        {
                            t.Property("Consumo")
                                .HasColumnName("SubEstruturaAviamento_Consumo");

                            t.Property("EstruturaIdEstrutura")
                                .HasColumnName("SubEstruturaAviamento_EstruturaIdEstrutura");

                            t.Property("ImgAcabado")
                                .HasColumnName("SubEstruturaAviamento_ImgAcabado");
                        });

                    b.HasDiscriminator().HasValue("Aviamento");

                    b.HasData(
                        new
                        {
                            IdEstrutura = "Estrutura3",
                            IdSubEstrutura = "SubEstrutura3",
                            Consumo = 5f,
                            ImgAcabado = new byte[0]
                        },
                        new
                        {
                            IdEstrutura = "Estrutura4",
                            IdSubEstrutura = "SubEstrutura4",
                            Consumo = 7.5f,
                            ImgAcabado = new byte[0]
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaComPeca", b =>
                {
                    b.HasBaseType("PlanetShoes.Infrastructure.Data.Estrutura");

                    b.Property<string>("EstruturaIdEstrutura")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("ImgSubEstruturaComPeca")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasIndex("EstruturaIdEstrutura");

                    b.ToTable("Estruturas", t =>
                        {
                            t.Property("EstruturaIdEstrutura")
                                .HasColumnName("SubEstruturaComPeca_EstruturaIdEstrutura");
                        });

                    b.HasDiscriminator().HasValue("ComPeca");

                    b.HasData(
                        new
                        {
                            IdEstrutura = "Estrutura9",
                            IdSubEstrutura = "SubEstrutura9",
                            ImgSubEstruturaComPeca = new byte[0]
                        },
                        new
                        {
                            IdEstrutura = "Estrutura10",
                            IdSubEstrutura = "SubEstrutura10",
                            ImgSubEstruturaComPeca = new byte[0]
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.PecaCabedal", b =>
                {
                    b.HasBaseType("PlanetShoes.Infrastructure.Data.Peca");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("NomeModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Perimetro")
                        .HasColumnType("real");

                    b.Property<float>("Superficie")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue("PecaCabedal");

                    b.HasData(
                        new
                        {
                            IdPeca = "PecaCabedal1",
                            Agrupamento = 0,
                            Codigo = 101,
                            Consumo = 2.5f,
                            Descricao = "Cabedal de couro",
                            IdEstrutura = "Estrutura5",
                            IdMateriaPrima = "MateriaPrima1",
                            ImgPeca = new byte[0],
                            Nome = "Cabedal 1",
                            Tamanho = 40,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora = new TimeSpan(0, 0, 0, 0, 0),
                            NomeModelo = "Empire",
                            Perimetro = 50f,
                            Superficie = 100f
                        },
                        new
                        {
                            IdPeca = "PecaCabedal2",
                            Agrupamento = 1,
                            Codigo = 102,
                            Consumo = 3f,
                            Descricao = "Cabedal sintético",
                            IdEstrutura = "Estrutura5",
                            IdMateriaPrima = "MateriaPrima2",
                            ImgPeca = new byte[0],
                            Nome = "Cabedal 2",
                            Tamanho = 42,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora = new TimeSpan(0, 0, 0, 0, 0),
                            NomeModelo = "Modern",
                            Perimetro = 55f,
                            Superficie = 110f
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.PecaSolado", b =>
                {
                    b.HasBaseType("PlanetShoes.Infrastructure.Data.Peca");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue("PecaSolado");

                    b.HasData(
                        new
                        {
                            IdPeca = "PecaSolado1",
                            Agrupamento = 0,
                            Codigo = 201,
                            Consumo = 1.5f,
                            Descricao = "Solado de borracha",
                            IdEstrutura = "Estrutura5",
                            IdMateriaPrima = "MateriaPrima2",
                            ImgPeca = new byte[0],
                            Nome = "Solado 1",
                            Tamanho = 40,
                            Peso = 0.5f
                        },
                        new
                        {
                            IdPeca = "PecaSolado2",
                            Agrupamento = 1,
                            Codigo = 202,
                            Consumo = 2f,
                            Descricao = "Solado de EVA",
                            IdEstrutura = "Estrutura8",
                            IdMateriaPrima = "MateriaPrima1",
                            ImgPeca = new byte[0],
                            Nome = "Solado 2",
                            Tamanho = 42,
                            Peso = 0.6f
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaComPecaCabedal", b =>
                {
                    b.HasBaseType("PlanetShoes.Infrastructure.Data.SubEstruturaComPeca");

                    b.Property<int>("DesignCabedal")
                        .HasColumnType("int");

                    b.Property<int>("EstruturaCabedal")
                        .HasColumnType("int");

                    b.ToTable("Estruturas", t =>
                        {
                            t.Property("EstruturaIdEstrutura")
                                .HasColumnName("SubEstruturaComPeca_EstruturaIdEstrutura");
                        });

                    b.HasDiscriminator().HasValue("ComPecaCabedal");

                    b.HasData(
                        new
                        {
                            IdEstrutura = "Estrutura5",
                            IdSubEstrutura = "SubEstrutura5",
                            ImgSubEstruturaComPeca = new byte[0],
                            DesignCabedal = 2,
                            EstruturaCabedal = 1
                        },
                        new
                        {
                            IdEstrutura = "Estrutura6",
                            IdSubEstrutura = "SubEstrutura6",
                            ImgSubEstruturaComPeca = new byte[0],
                            DesignCabedal = 1,
                            EstruturaCabedal = 2
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaComPecaSolado", b =>
                {
                    b.HasBaseType("PlanetShoes.Infrastructure.Data.SubEstruturaComPeca");

                    b.Property<int>("AlturaSolado")
                        .HasColumnType("int");

                    b.Property<int>("DesignSolado")
                        .HasColumnType("int");

                    b.Property<int>("EstruturaSolado")
                        .HasColumnType("int");

                    b.ToTable("Estruturas", t =>
                        {
                            t.Property("EstruturaIdEstrutura")
                                .HasColumnName("SubEstruturaComPeca_EstruturaIdEstrutura");
                        });

                    b.HasDiscriminator().HasValue("ComPecaSolado");

                    b.HasData(
                        new
                        {
                            IdEstrutura = "Estrutura7",
                            IdSubEstrutura = "SubEstrutura7",
                            ImgSubEstruturaComPeca = new byte[0],
                            AlturaSolado = 2,
                            DesignSolado = 1,
                            EstruturaSolado = 0
                        },
                        new
                        {
                            IdEstrutura = "Estrutura8",
                            IdSubEstrutura = "SubEstrutura8",
                            ImgSubEstruturaComPeca = new byte[0],
                            AlturaSolado = 3,
                            DesignSolado = 4,
                            EstruturaSolado = 1
                        });
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.Peca", b =>
                {
                    b.HasOne("PlanetShoes.Infrastructure.Data.SubEstruturaComPeca", null)
                        .WithMany("Pecas")
                        .HasForeignKey("IdEstrutura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanetShoes.Infrastructure.Data.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("MateriaPrimaIdMateriaPrima");

                    b.Navigation("MateriaPrima");
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaAcabado", b =>
                {
                    b.HasOne("PlanetShoes.Infrastructure.Data.Estrutura", null)
                        .WithMany("SubEstruturasAcabado")
                        .HasForeignKey("EstruturaIdEstrutura");
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaAviamento", b =>
                {
                    b.HasOne("PlanetShoes.Infrastructure.Data.Estrutura", null)
                        .WithMany("SubEstruturasAviamento")
                        .HasForeignKey("EstruturaIdEstrutura");
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaComPeca", b =>
                {
                    b.HasOne("PlanetShoes.Infrastructure.Data.Estrutura", null)
                        .WithMany("SubEstruturasComPeca")
                        .HasForeignKey("EstruturaIdEstrutura");
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.Estrutura", b =>
                {
                    b.Navigation("SubEstruturasAcabado");

                    b.Navigation("SubEstruturasAviamento");

                    b.Navigation("SubEstruturasComPeca");
                });

            modelBuilder.Entity("PlanetShoes.Infrastructure.Data.SubEstruturaComPeca", b =>
                {
                    b.Navigation("Pecas");
                });
#pragma warning restore 612, 618
        }
    }
}
