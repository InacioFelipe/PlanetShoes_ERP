<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:local="clr-namespace:PlanetShoes.ViewModels">
    
    <Style x:Key="FormStyleSimple" TargetType="TextBox">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FF6200EE"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="auto"/>
    </Style>
    
    <Style x:Key="FormStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FF6200EE"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="auto"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#FF6200EE"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FormMLStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FF6200EE"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="MaxHeight" Value="72"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#FF6200EE"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo para TextBox com borda dinâmica -->
    <Style x:Key="DynamicBorderTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource FormStyle}">
        <!--<Setter Property="BorderBrush" Value="Transparent"/>-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding BordaCor}" Value="{x:Static Brushes.Orange}">
                <Setter Property="BorderBrush" Value="Orange"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Estilo para TextBox com borda dinâmica -->
    <Style x:Key="DynamicBorderTextBoxStyle2" TargetType="TextBox" BasedOn="{StaticResource FormStyle}">
        <Setter Property="BorderBrush" Value="#FF6200EE"/>
        <Style.Triggers>
            <!-- Condição 1: EmEdicao = true, CampoEmFoco = false, e campo vazio -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.EmEdicao, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True"/>
                    <Condition Binding="{Binding DataContext.CampoEmFoco, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False"/>
                    <!--<Condition Property="Text" Value="N\S"/>-->
                    <!-- Campo vazio -->
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" Value="Orange"/>
            </MultiDataTrigger>

            <!-- Condição 2: EmEdicao = true, CampoEmFoco = false, e campo não vazio -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.EmEdicao, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False"/>
                    <Condition Binding="{Binding DataContext.CampoEmFoco, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False"/>
                    <!--<Condition Property="Text" Value=""/>-->
                    <!-- Campo não vazio -->
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" Value="Aquamarine"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>